shiny::runApp()
runApp()
runApp()
# Read in data
df <- read.csv('../data/bechdel_data.csv', stringsAsFactors = FALSE)
# Read in data
df <- read.csv('/data/bechdel_data.csv', stringsAsFactors = FALSE)
setwd("~/Desktop/web-materials/exercise-1")
# Read in data
df <- read.csv('data/bechdel_data.csv', stringsAsFactors = FALSE)
View(df)
runApp()
runApp()
runApp()
shiny::runApp()
source('./scripts/build_map.R')
source('./scripts/build_scatter.R')
df <- read.csv('./data/electoral_college.csv', stringsAsFactors = FALSE)
state_codes <- read.csv('./data/state_codes.csv', stringsAsFactors = FALSE)
# Join together state.codes and df
joined_data <- left_join(df, state_codes, by="state")
# Compute the electoral votes per 100K people in each state
joined_data <- joined_data %>% mutate(ratio = votes/population * 100000)
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$map <- renderPlotly({
return(build_map(joined_data, input$mapvar))
})
})
library(shiny)
library(shiny)
library(plotly)
shinyUI(navbarPage(
"Electoral College",
# Create a tab panel for your map
tabPanel(
"Map",
titlePanel("Electoral College Votes"),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to map
selectInput(
"mapvar",
label = "Variable to Map",
choices = list(
"Population" = "population",
"Electoral Votes" = "votes",
"Votes / Population" = "ratio"
)
)
),
# Main panel: display plotly map
mainPanel(
plotlyOutput("map")
)
)
)
# Create a tabPanel to show your scatter plot
))
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
